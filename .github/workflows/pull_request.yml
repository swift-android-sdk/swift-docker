name: Build Docker images
on: [pull_request]

env:
  ghprbPullId: ${{ github.event.number }}
  ghprbGhRepository: ${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
   build:
     name: Build Docker images
     runs-on: ubuntu-latest
     if: false
     steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker images
        run: ./ci_test.py
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-logs
          path: |
            *.log

   static-linux-build:
     name: Build Static Linux image
     runs-on: ubuntu-latest
     if: false
     steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker images
        working-directory: swift-ci/sdks/static-linux
        run: ./build

   android-build:
     #name: Build Android ${{ matrix.arch }} SDK
     #strategy:
       #fail-fast: false
       #matrix:
       #  arch: [armv7,aarch64,x86_64]
     name: Build Android SDK
     runs-on: ubuntu-24.04
     steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Android SDK
        working-directory: swift-ci/sdks/android
        run: |
          sudo apt install -q ninja-build
          ./build
          #TARGET_ARCHS=${{ matrix.arch }} ./build
      - name: Upload SDK artifactbundle
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          path: $RUNNER_TEMP/swift-android-sdk/products/*.artifactbundle.tar.gz
      - name: Install SDK Locally
        run:
          $RUNNER_TEMP/host-toolchain/*/usr/bin/swift sdk install $RUNNER_TEMP/swift-android-sdk/products/*.artifactbundle.tar.gz
      - name: Build Demo Project
        run: |
          cd $RUNNER_TEMP
          mkdir DemoProject
          cd DemoProject
          $RUNNER_TEMP/host-toolchain/*/usr/bin/swift package init
          $RUNNER_TEMP/host-toolchain/*/usr/bin/swift build --build-tests --sdk --swift-sdk aarch64-unknown-linux-android28
      - name: Test Swift Package on Android
        # TODO: need to implement installed-sdk option in swift-android-action
        if: false
        uses: skiptools/swift-android-action@main
        with:
          package-path: $RUNNER_TEMP/DemoProject
          installed-sdk: aarch64-unknown-linux-android28

