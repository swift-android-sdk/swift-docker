#!/bin/bash -ex
#
# ===----------------------------------------------------------------------===
#
#  Swift Android SDK: Top-level Build Script
#
# ===----------------------------------------------------------------------===

if [[ "$DOCKER" == "" ]]; then
    DOCKER=docker
fi

case $(arch) in
    arm64|aarch64)
        OS_ARCH_SUFFIX=-aarch64
        ;;
    amd64|x86_64)
        OS_ARCH_SUFFIX=
        ;;
    *)
        echo "Unknown architecture $(arch)"
        exit 1
        ;;
esac

case "${BUILD_VERSION}" in
    release)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/releases | grep -m1 swift-6.1 | cut -d- -f2)
        SWIFT_TAG="swift-${LATEST_TOOLCHAIN_VERSION}-RELEASE"
        SWIFT_BRANCH="swift-$(echo $SWIFT_TAG | cut -d- -f2)-release"
        ;;
    devel)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/tags | grep -m1 swift-6.2-DEV | cut -d- -f8-10)
        SWIFT_TAG="swift-6.2-DEVELOPMENT-SNAPSHOT-${LATEST_TOOLCHAIN_VERSION}-a"
        SWIFT_BRANCH="swift-$(echo $SWIFT_TAG | cut -d- -f2)-branch"
        ;;
    trunk)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/tags | grep -m1 swift-DEV | cut -d- -f7-9)
        SWIFT_TAG="swift-DEVELOPMENT-SNAPSHOT-${LATEST_TOOLCHAIN_VERSION}-a"
        SWIFT_BRANCH="development"
        ;;
    *)
        echo "$0: invalid BUILD_VERSION=${BUILD_VERSION}"
        exit 1
        ;;
esac

# FIXME: this is the host operating system, but we need the Docker OS
HOST_OS=ubuntu24.04
SWIFT_BASE=$SWIFT_TAG-$HOST_OS
SWIFT_TOOLCHAIN_URL="https://download.swift.org/$SWIFT_BRANCH/$(echo $HOST_OS | tr -d '.')/$SWIFT_TAG/$SWIFT_BASE.tar.gz"

ANDROID_API=28
ANDROID_NDK_VERSION=android-ndk-r27c

# Build the Docker image
$DOCKER build --build-arg OS_ARCH_SUFFIX=$OS_ARCH_SUFFIX --build-arg SWIFT_TOOLCHAIN_URL=$SWIFT_TOOLCHAIN_URL --build-arg ANDROID_NDK_VERSION=$ANDROID_NDK_VERSION -t swift-android .

# Check-out the sources
scripts/fetch-source.sh --source-dir source --swift-tag ${SWIFT_TAG}

mkdir -p products

# Run the build
$DOCKER run -it --rm \
          -v ./source:/source \
          -v ./products:/products \
          swift-android \
          /scripts/build.sh --source-dir /source --products-dir /products --android-api ${ANDROID_API} --host-toolchain /usr/local/swift --archs ${TARGET_ARCHS}
