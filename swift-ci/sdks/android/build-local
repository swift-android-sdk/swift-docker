#!/bin/bash -e
# Swift Android SDK: Top-level Build Script

# default architectures to build for
TARGET_ARCHS=${TARGET_ARCHS:-aarch64,x86_64,armv7}

ANDROID_NDK_VERSION=android-ndk-r27c
ANDROID_API=28

SDKROOT=${RUNNER_TEMP:-${TMPDIR:-'/tmp'}}/swift-android-sdk
mkdir -p ${SDKROOT}

# Install a Swift host toolchain if it isn't already present
SWIFT_ROOT=${SDKROOT}/host-toolchain
HOST_OS=ubuntu$(lsb_release -sr)

#BUILD_VERSION='release'
#BUILD_VERSION='trunk'
#BUILD_VERSION=${BUILD_VERSION:-'devel'}

case "${BUILD_VERSION}" in
    release)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/releases | grep -m1 swift-6.1 | cut -d- -f2)
        SWIFT_TAG="swift-${LATEST_TOOLCHAIN_VERSION}-RELEASE"
        SWIFT_BRANCH="swift-$(echo $SWIFT_TAG | cut -d- -f2)-release"
        ;;
    devel)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/tags | grep -m1 swift-6.2-DEV | cut -d- -f8-10)
        SWIFT_TAG="swift-6.2-DEVELOPMENT-SNAPSHOT-${LATEST_TOOLCHAIN_VERSION}-a"
        SWIFT_BRANCH="swift-$(echo $SWIFT_TAG | cut -d- -f2)-branch"
        ;;
    trunk)
        LATEST_TOOLCHAIN_VERSION=$(curl -sL https://github.com/apple/swift/tags | grep -m1 swift-DEV | cut -d- -f7-9)
        SWIFT_TAG="swift-DEVELOPMENT-SNAPSHOT-${LATEST_TOOLCHAIN_VERSION}-a"
        SWIFT_BRANCH="development"
        ;;
    *)
        echo "$0: invalid BUILD_VERSION=${BUILD_VERSION}"
        exit 1
        ;;
esac

SWIFT_BASE=$SWIFT_TAG-$HOST_OS

if [[ ! -d "$SWIFT_ROOT/$SWIFT_BASE" ]]; then
    mkdir -p $SWIFT_ROOT
    pushd $SWIFT_ROOT

    SWIFT_URL="https://download.swift.org/$SWIFT_BRANCH/$(echo $HOST_OS | tr -d '.')/$SWIFT_TAG/$SWIFT_BASE.tar.gz"
    wget -q $SWIFT_URL
    tar xzf $SWIFT_BASE.tar.gz

    popd
fi

#HOST_TOOLCHAIN=${HOST_TOOLCHAIN:-$(dirname $(dirname $(which swiftc)))}
HOST_TOOLCHAIN=$SWIFT_ROOT/$SWIFT_BASE/usr
$HOST_TOOLCHAIN/bin/swift --version

# ensure the correct Swift is first in the PATH
export PATH=$HOST_TOOLCHAIN/bin:$PATH

export ANDROID_NDK_HOME=${SDKROOT}/ndk/${ANDROID_NDK_VERSION}
export ANDROID_NDK=${ANDROID_NDK_HOME}

if [[ ! -d ${ANDROID_NDK_HOME} ]]; then
    mkdir -p $(dirname ${ANDROID_NDK_HOME})
    pushd $(dirname ${ANDROID_NDK_HOME})
    NDKFILE=$(basename $ANDROID_NDK_HOME)-linux.zip
    wget -q https://dl.google.com/android/repository/${NDKFILE}
    unzip -q ${NDKFILE}
    popd
fi

mkdir -p ${SDKROOT}/products

./scripts/fetch-source.sh --source-dir ${SDKROOT}/src --swift-tag ${SWIFT_TAG}

./scripts/build.sh --products-dir ${SDKROOT}/products --source-dir ${SDKROOT}/src --build-dir ${SDKROOT}/build --ndk-home ${ANDROID_NDK_HOME} --android-api ${ANDROID_API} --host-toolchain ${HOST_TOOLCHAIN} --archs ${TARGET_ARCHS} ${@}

