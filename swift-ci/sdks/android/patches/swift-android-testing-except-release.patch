diff --git a/swift/test/ClangImporter/pcm-emit-direct-cc1-mode.swift b/swift/test/ClangImporter/pcm-emit-direct-cc1-mode.swift
index f5048b9e3d5..c227ef7b77d 100644
--- a/swift/test/ClangImporter/pcm-emit-direct-cc1-mode.swift
+++ b/swift/test/ClangImporter/pcm-emit-direct-cc1-mode.swift
@@ -9,7 +9,7 @@
 // CHECK-DUMP:   Module map file: {{.*[/\\]}}Inputs{{/|\\}}custom-modules{{/|\\}}module.modulemap
 
 // Verify that the clang command-line used is cc1
-// RUN: %FileCheck -check-prefix CHECK-CLANG -DTRIPLE=%target-triple %s < %t.diags.txt
+// RUN: %FileCheck -check-prefix CHECK-CLANG -DTRIPLE=%module-target-triple %s < %t.diags.txt
 // CHECK-CLANG: clang importer cc1 args
 // CHECK-CLANG-SAME: '-o' '{{.*[/\\]}}script.pcm' '-fsyntax-only' '-x' 'objective-c' '{{.*[/\\]}}module.modulemap' '-triple' '[[TRIPLE]]'
 // CHECK-CLANG-SAME: '-fmodules'
diff --git a/swift/test/IRGen/abitypes_arm.swift b/swift/test/IRGen/abitypes_arm.swift
index 9428294483d..52bd8b10145 100644
--- a/swift/test/IRGen/abitypes_arm.swift
+++ b/swift/test/IRGen/abitypes_arm.swift
@@ -11,6 +11,6 @@ class Foo {
   }
 }
 
-// armv7: define internal void @makeOne(ptr noalias sret({{.*}}) align 4 %agg.result, float{{( noundef)?}} %f, float{{( noundef)?}} %s)
+// armv7: define internal void @makeOne(ptr{{( dead_on_unwind)?}} noalias{{( writable)?}} sret({{.*}}) align 4 %agg.result, float{{( noundef)?}} %f, float{{( noundef)?}} %s)
 // armv7s: define internal void @makeOne(ptr noalias sret({{.*}}) align 4 %agg.result, float %f, float %s)
 // armv7k: define internal %struct.One @makeOne(float {{.*}}%f, float {{.*}}%s)
diff --git a/swift/test/Interop/Cxx/class/constructors-copy-module-interface.swift b/swift/test/Interop/Cxx/class/constructors-copy-module-interface.swift
index 042c10e7d1d..254f6543b58 100644
--- a/swift/test/Interop/Cxx/class/constructors-copy-module-interface.swift
+++ b/swift/test/Interop/Cxx/class/constructors-copy-module-interface.swift
@@ -1,4 +1,5 @@
 // RUN: %target-swift-ide-test -print-module -module-to-print=Constructors -I %S/Inputs -source-filename=x -enable-experimental-cxx-interop | %FileCheck %s
+// XFAIL: OS=linux-androideabi
 
 // CHECK: struct TemplatedCopyConstructor
 // CHECK: struct TemplatedCopyConstructorWithExtraArg
diff --git a/swift/test/Interop/Cxx/class/constructors-diagnostics.swift b/swift/test/Interop/Cxx/class/constructors-diagnostics.swift
index aac01480660..8fa99fae7fb 100644
--- a/swift/test/Interop/Cxx/class/constructors-diagnostics.swift
+++ b/swift/test/Interop/Cxx/class/constructors-diagnostics.swift
@@ -2,6 +2,7 @@
 
 // This test uses -verify-additional-file, which do not work well on Windows.
 // UNSUPPORTED: OS=windows-msvc
+// XFAIL: OS=linux-androideabi
 
 import Constructors
 
diff --git a/swift/test/Interop/Cxx/class/constructors-module-interface.swift b/swift/test/Interop/Cxx/class/constructors-module-interface.swift
index bf189b6e302..d2c3d65f03e 100644
--- a/swift/test/Interop/Cxx/class/constructors-module-interface.swift
+++ b/swift/test/Interop/Cxx/class/constructors-module-interface.swift
@@ -1,4 +1,5 @@
 // RUN: %target-swift-ide-test -print-module -module-to-print=Constructors -I %S/Inputs/ -source-filename=x -enable-experimental-cxx-interop | %FileCheck %s
+// XFAIL: OS=linux-androideabi
 
 // CHECK:      struct ExplicitDefaultConstructor {
 // CHECK-NEXT:   init()
diff --git a/swift/test/Interop/Cxx/class/constructors-silgen.swift b/swift/test/Interop/Cxx/class/constructors-silgen.swift
index b1624ccccfe..79cbdf170de 100644
--- a/swift/test/Interop/Cxx/class/constructors-silgen.swift
+++ b/swift/test/Interop/Cxx/class/constructors-silgen.swift
@@ -1,4 +1,5 @@
 // RUN: %target-swiftxx-frontend -I %S/Inputs -Xllvm -sil-print-types -emit-silgen %s | %FileCheck %s
+// XFAIL: OS=linux-androideabi
 
 import Constructors
 
diff --git a/swift/test/Interop/Cxx/class/constructors-typechecker.swift b/swift/test/Interop/Cxx/class/constructors-typechecker.swift
index 8ce10b1ca75..52ff4104b83 100644
--- a/swift/test/Interop/Cxx/class/constructors-typechecker.swift
+++ b/swift/test/Interop/Cxx/class/constructors-typechecker.swift
@@ -1,4 +1,5 @@
 // RUN: %target-typecheck-verify-swift -verify-ignore-unknown -I %S/Inputs -enable-experimental-cxx-interop
+// XFAIL: OS=linux-androideabi
 
 import Constructors
 
diff --git a/swift/test/Interop/Cxx/class/custom-new-operator-irgen.swift b/swift/test/Interop/Cxx/class/custom-new-operator-irgen.swift
index 74e692c9db2..0423493afac 100644
--- a/swift/test/Interop/Cxx/class/custom-new-operator-irgen.swift
+++ b/swift/test/Interop/Cxx/class/custom-new-operator-irgen.swift
@@ -5,4 +5,4 @@ import CustomNewOperator
 var x = callsCustomNew()
 
 // Make sure the definition of `operator new` is emitted.
-// CHECK: define {{.*}} @{{_ZnwmPv15container_new_t|"\?\?2@YAPEAX_KPEAXUcontainer_new_t@@@Z"}}
+// CHECK: define {{.*}} @{{_Znw(j|m)Pv15container_new_t|"\?\?2@YAPEAX_KPEAXUcontainer_new_t@@@Z"}}
diff --git a/swift/test/SILOptimizer/package-cmo-serialize-tables.swift b/swift/test/SILOptimizer/package-cmo-serialize-tables.swift
index 382ff2e8080..f061374b2a1 100644
--- a/swift/test/SILOptimizer/package-cmo-serialize-tables.swift
+++ b/swift/test/SILOptimizer/package-cmo-serialize-tables.swift
@@ -19,7 +19,7 @@
 
 // Temporarily disabling on watchOS (both arm64_32 & armv7k):
 // rdar://140330692 (ðŸŸ  OSS Swift CI: oss-swift_tools-RA_stdlib-DA_test-device-non_executable failed...
-// UNSUPPORTED: OS=watchos
+// UNSUPPORTED: OS=watchos, OS=linux-androideabi
 
 //--- main.swift
 
diff --git a/swift/test/SILOptimizer/throws_prediction.swift b/swift/test/SILOptimizer/throws_prediction.swift
index f7f2664b2de..01d36e127c6 100644
--- a/swift/test/SILOptimizer/throws_prediction.swift
+++ b/swift/test/SILOptimizer/throws_prediction.swift
@@ -16,7 +16,7 @@
 // RUN:   -sil-verify-all -module-name=test -emit-sil \
 // RUN:       | %FileCheck --check-prefix CHECK-DISABLED %s
 
-// UNSUPPORTED: CPU=armv7k || CPU=arm64_32
+// UNSUPPORTED: CPU=armv7k, CPU=arm64_32, CPU=armv7
 
 // CHECK-DISABLED-NOT: normal_count
 
diff --git a/swift-corelibs-xctest/cmake/modules/PlatformInfo.cmake b/swift-corelibs-xctest/cmake/modules/PlatformInfo.cmake
index 468dc61..a90ae3d 100644
--- a/swift-corelibs-xctest/cmake/modules/PlatformInfo.cmake
+++ b/swift-corelibs-xctest/cmake/modules/PlatformInfo.cmake
@@ -2,6 +2,10 @@
 set(print_target_info_invocation "${CMAKE_Swift_COMPILER}" -print-target-info)
 if(CMAKE_Swift_COMPILER_TARGET)
   list(APPEND print_target_info_invocation -target ${CMAKE_Swift_COMPILER_TARGET})
+else()
+  set(arg_list ${CMAKE_Swift_FLAGS})
+  separate_arguments(arg_list)
+  list(APPEND print_target_info_invocation ${arg_list})
 endif()
 execute_process(COMMAND ${print_target_info_invocation} OUTPUT_VARIABLE target_info_json)
 message(CONFIGURE_LOG "Swift Target Info: ${print_target_info_invocation}\n"
diff --git a/swift-testing/cmake/modules/PlatformInfo.cmake b/swift-testing/cmake/modules/PlatformInfo.cmake
index 94c60ef..ab8a491 100644
--- a/swift-testing/cmake/modules/PlatformInfo.cmake
+++ b/swift-testing/cmake/modules/PlatformInfo.cmake
@@ -9,6 +9,10 @@
 set(print_target_info_invocation "${CMAKE_Swift_COMPILER}" -print-target-info)
 if(CMAKE_Swift_COMPILER_TARGET)
   list(APPEND print_target_info_invocation -target ${CMAKE_Swift_COMPILER_TARGET})
+else()
+  set(arg_list ${CMAKE_Swift_FLAGS})
+  separate_arguments(arg_list)
+  list(APPEND print_target_info_invocation ${arg_list})
 endif()
 execute_process(COMMAND ${print_target_info_invocation} OUTPUT_VARIABLE target_info_json)
 message(CONFIGURE_LOG "Swift Target Info: ${print_target_info_invocation}\n"
